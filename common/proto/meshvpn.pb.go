// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: common/proto/meshvpn.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{0}
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{1}
}

type ServerConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientPubkey []byte `protobuf:"bytes,1,opt,name=client_pubkey,json=clientPubkey,proto3" json:"client_pubkey,omitempty"`
}

func (x *ServerConnectRequest) Reset() {
	*x = ServerConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConnectRequest) ProtoMessage() {}

func (x *ServerConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConnectRequest.ProtoReflect.Descriptor instead.
func (*ServerConnectRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{2}
}

func (x *ServerConnectRequest) GetClientPubkey() []byte {
	if x != nil {
		return x.ClientPubkey
	}
	return nil
}

type ServerConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerPubkey  []byte `protobuf:"bytes,1,opt,name=server_pubkey,json=serverPubkey,proto3" json:"server_pubkey,omitempty"`
	WireguardPort int32  `protobuf:"varint,2,opt,name=wireguard_port,json=wireguardPort,proto3" json:"wireguard_port,omitempty"`
}

func (x *ServerConnectReply) Reset() {
	*x = ServerConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConnectReply) ProtoMessage() {}

func (x *ServerConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConnectReply.ProtoReflect.Descriptor instead.
func (*ServerConnectReply) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{3}
}

func (x *ServerConnectReply) GetServerPubkey() []byte {
	if x != nil {
		return x.ServerPubkey
	}
	return nil
}

func (x *ServerConnectReply) GetWireguardPort() int32 {
	if x != nil {
		return x.WireguardPort
	}
	return 0
}

type PeerConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerPubkey []byte `protobuf:"bytes,1,opt,name=peer_pubkey,json=peerPubkey,proto3" json:"peer_pubkey,omitempty"`
}

func (x *PeerConnectRequest) Reset() {
	*x = PeerConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectRequest) ProtoMessage() {}

func (x *PeerConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectRequest.ProtoReflect.Descriptor instead.
func (*PeerConnectRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{4}
}

func (x *PeerConnectRequest) GetPeerPubkey() []byte {
	if x != nil {
		return x.PeerPubkey
	}
	return nil
}

type PeerConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//	*PeerConnectReply_Seen
	//	*PeerConnectReply_Unseen
	Location isPeerConnectReply_Location `protobuf_oneof:"location"`
}

func (x *PeerConnectReply) Reset() {
	*x = PeerConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectReply) ProtoMessage() {}

func (x *PeerConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectReply.ProtoReflect.Descriptor instead.
func (*PeerConnectReply) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{5}
}

func (m *PeerConnectReply) GetLocation() isPeerConnectReply_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *PeerConnectReply) GetSeen() *PeerConnectReply_Location {
	if x, ok := x.GetLocation().(*PeerConnectReply_Seen); ok {
		return x.Seen
	}
	return nil
}

func (x *PeerConnectReply) GetUnseen() *PeerConnectReply_None {
	if x, ok := x.GetLocation().(*PeerConnectReply_Unseen); ok {
		return x.Unseen
	}
	return nil
}

type isPeerConnectReply_Location interface {
	isPeerConnectReply_Location()
}

type PeerConnectReply_Seen struct {
	Seen *PeerConnectReply_Location `protobuf:"bytes,1,opt,name=seen,proto3,oneof"`
}

type PeerConnectReply_Unseen struct {
	Unseen *PeerConnectReply_None `protobuf:"bytes,2,opt,name=unseen,proto3,oneof"`
}

func (*PeerConnectReply_Seen) isPeerConnectReply_Location() {}

func (*PeerConnectReply_Unseen) isPeerConnectReply_Location() {}

type PeerConnectReply_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   []byte `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PeerConnectReply_Location) Reset() {
	*x = PeerConnectReply_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectReply_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectReply_Location) ProtoMessage() {}

func (x *PeerConnectReply_Location) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectReply_Location.ProtoReflect.Descriptor instead.
func (*PeerConnectReply_Location) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PeerConnectReply_Location) GetIp() []byte {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *PeerConnectReply_Location) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type PeerConnectReply_None struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PeerConnectReply_None) Reset() {
	*x = PeerConnectReply_None{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_meshvpn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerConnectReply_None) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerConnectReply_None) ProtoMessage() {}

func (x *PeerConnectReply_None) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_meshvpn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerConnectReply_None.ProtoReflect.Descriptor instead.
func (*PeerConnectReply_None) Descriptor() ([]byte, []int) {
	return file_common_proto_meshvpn_proto_rawDescGZIP(), []int{5, 1}
}

var File_common_proto_meshvpn_proto protoreflect.FileDescriptor

var file_common_proto_meshvpn_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d,
	0x65, 0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65,
	0x73, 0x68, 0x76, 0x70, 0x6e, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x3b, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x60,
	0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x72,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x77, 0x69, 0x72, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x35, 0x0a, 0x12, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x65, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x04,
	0x73, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x76, 0x70, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x06, 0x75, 0x6e, 0x73, 0x65, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x70, 0x6e,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x4e, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e, 0x73, 0x65, 0x65, 0x6e,
	0x1a, 0x2e, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xcf, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x68, 0x56, 0x50, 0x4e,
	0x12, 0x30, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76,
	0x70, 0x6e, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x45, 0x0a, 0x0b, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x65,
	0x73, 0x68, 0x76, 0x70, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x6b, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d, 0x65,
	0x73, 0x68, 0x76, 0x70, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_meshvpn_proto_rawDescOnce sync.Once
	file_common_proto_meshvpn_proto_rawDescData = file_common_proto_meshvpn_proto_rawDesc
)

func file_common_proto_meshvpn_proto_rawDescGZIP() []byte {
	file_common_proto_meshvpn_proto_rawDescOnce.Do(func() {
		file_common_proto_meshvpn_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_meshvpn_proto_rawDescData)
	})
	return file_common_proto_meshvpn_proto_rawDescData
}

var file_common_proto_meshvpn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_proto_meshvpn_proto_goTypes = []interface{}{
	(*PingRequest)(nil),               // 0: meshvpn.PingRequest
	(*PingReply)(nil),                 // 1: meshvpn.PingReply
	(*ServerConnectRequest)(nil),      // 2: meshvpn.ServerConnectRequest
	(*ServerConnectReply)(nil),        // 3: meshvpn.ServerConnectReply
	(*PeerConnectRequest)(nil),        // 4: meshvpn.PeerConnectRequest
	(*PeerConnectReply)(nil),          // 5: meshvpn.PeerConnectReply
	(*PeerConnectReply_Location)(nil), // 6: meshvpn.PeerConnectReply.Location
	(*PeerConnectReply_None)(nil),     // 7: meshvpn.PeerConnectReply.None
}
var file_common_proto_meshvpn_proto_depIdxs = []int32{
	6, // 0: meshvpn.PeerConnectReply.seen:type_name -> meshvpn.PeerConnectReply.Location
	7, // 1: meshvpn.PeerConnectReply.unseen:type_name -> meshvpn.PeerConnectReply.None
	0, // 2: meshvpn.MeshVPN.Ping:input_type -> meshvpn.PingRequest
	2, // 3: meshvpn.MeshVPN.ServerConnect:input_type -> meshvpn.ServerConnectRequest
	4, // 4: meshvpn.MeshVPN.PeerConnect:input_type -> meshvpn.PeerConnectRequest
	1, // 5: meshvpn.MeshVPN.Ping:output_type -> meshvpn.PingReply
	3, // 6: meshvpn.MeshVPN.ServerConnect:output_type -> meshvpn.ServerConnectReply
	5, // 7: meshvpn.MeshVPN.PeerConnect:output_type -> meshvpn.PeerConnectReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_proto_meshvpn_proto_init() }
func file_common_proto_meshvpn_proto_init() {
	if File_common_proto_meshvpn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_meshvpn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectReply_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_meshvpn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerConnectReply_None); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_proto_meshvpn_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PeerConnectReply_Seen)(nil),
		(*PeerConnectReply_Unseen)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_meshvpn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_proto_meshvpn_proto_goTypes,
		DependencyIndexes: file_common_proto_meshvpn_proto_depIdxs,
		MessageInfos:      file_common_proto_meshvpn_proto_msgTypes,
	}.Build()
	File_common_proto_meshvpn_proto = out.File
	file_common_proto_meshvpn_proto_rawDesc = nil
	file_common_proto_meshvpn_proto_goTypes = nil
	file_common_proto_meshvpn_proto_depIdxs = nil
}
